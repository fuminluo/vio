<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.rabbit.vio.mapper.EmployeeMapper">
    <!-- 联合查询：级联属性封装结果集 -->
    <resultMap type="priv.rabbit.vio.entity.Employee" id="MyDifEmp">
        <id column="id" property="id"/>
        <result column="last_name" property="lastName"/>
        <result column="gender" property="gender"/>
        <result column="dept_id" property="dept.id"/>
        <result column="dept_name" property="dept.departmentName"/>
    </resultMap>

    <select id="getEmpAndDept" resultMap="MyDifEmp">
        SELECT
        e.id,
        e.last_name last_name,
        e.gender gender,
        d.id dept_id,
        d.dept_name dept_name
        FROM
        tbl_employee e,
        tbl_dept d
        WHERE
        e.dept_id = d.id
        AND e.id = #{id}
    </select>


    <!-- collection嵌套结果集的方式，定义关联的集合类型元素的封装规则-->
    <!-- 嵌套结果集的方式，使用collection标签定义关联的集合类型的属性封装规则 -->
    <resultMap type="priv.rabbit.vio.entity.Department" id="MyDept">
        <id column="dept_id" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <!-- collection定义关联结合类型的属性的封装规则 ofType：指定集合里面元素的类型 -->
        <collection property="emps" ofType="priv.rabbit.vio.entity.Employee">
            <!-- 定义这个集合中元素的封装规则 -->
            <id column="eid" property="id"/>
            <result column="last_name" property="lastName"/>
            <result column="email" property="email"/>
            <result column="gender" property="gender"/>
        </collection>

    </resultMap>

    <select id="getDeptByIdPlus" resultMap="MyDept" >
        SELECT
        d.id dept_id,
        d.dept_name,
        e.id,
        e.last_name last_name,
        e.email email,
        e.gender gender
        FROM
        tbl_dept d
        LEFT JOIN tbl_employee e ON d.id = e.dept_id
        WHERE
        d.id = #{id}
    </select>

</mapper>